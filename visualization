function varargout = gui(varargin)
% GUI MATLAB code for gui.fig
%      GUI, by itself, creates a new GUI or raises the existing
%      singleton*.
%
%      H = GUI returns the handle to a new GUI or the handle to
%      the existing singleton*.
%
%      GUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in GUI.M with the given input arguments.
%
%      GUI('Property','Value',...) creates a new GUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before gui_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to gui_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help gui

% Last Modified by GUIDE v2.5 13-Apr-2020 17:39:25

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @gui_OpeningFcn, ...
                   'gui_OutputFcn',  @gui_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT
end

% --- Executes just before gui is made visible.
function gui_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to gui (see VARARGIN)

% Choose default command line output for gui
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes gui wait for user response (see UIRESUME)
% uiwait(handles.figure1);
end

% --- Outputs from this function are returned to the command line.
function varargout = gui_OutputFcn(hObject, eventdata, handles) 
ncfile = 'o3_surface_20180701000000.nc';
lati = ncread(ncfile, 'lat');
longe = ncread(ncfile, 'lon');

newMatrix = readmatrix('24HR_CBE_01.csv');
newMatrix(400,:) = [0];
newMatrix(:,700) = [0];
showmap = pcolor(longe,lati,newMatrix);
showmap.EdgeAlpha = 0;
c = colorbar;
c.Label.String = 'Levels';
caxis([-0.3 1.3]);
load coast;
hold on;
plot(long,lat,'k');
title("Initial Measurment");
varargout{1} = handles.output;
end

% --- changes hours based on the slider
function slider3_Callback(hObject, eventdata, handles)
ncfile = 'o3_surface_20180701000000.nc';

sliderVal = get(hObject,'Value');
slider = round(sliderVal);

lati = ncread(ncfile, 'lat');
longe = ncread(ncfile, 'lon');

fileName = dir('24HR_CBE_*.csv');

theFiles = fileName(slider).name;
newMatrix = readmatrix(theFiles);
newMatrix(400,:) = [0];
newMatrix(:,700) = [0];
showmap = pcolor(longe,lati,newMatrix);
showmap.EdgeAlpha = 0;
c = colorbar;
c.Label.String = 'Levels';
caxis([-0.3 1.3]);
load coast;
hold on;
plot(long,lat,'k');
if slider == 1
    title("Initial Measurment");
else
    title("Hour: " + (slider-1));
end
end


% --- creates the slider
function slider3_CreateFcn(hObject, eventdata, handles)
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end
end


% --- plays video of all hours
function pushbutton4_Callback(hObject, eventdata, handles)
ncfile = 'o3_surface_20180701000000.nc';

lati = ncread(ncfile, 'lat'); %reads the lat variable
longe = ncread(ncfile, 'lon'); %reads the lon variable
fileDirectory = dir('24HR_CBE_*.csv');  % creates a directory of all files beging with 24HR_CBE_

for k = 1 : length(fileDirectory)   %loop to dispaly all the files in the directory
    file = fileDirectory(k).name;   %takes the current file
    matrix = readmatrix(file);      %creates an array by reading the current file 
    matrix(400,:) = [0];            %changes the size of the matrix
    matrix(:,700) = [0];            
    showmap = pcolor(longe,lati,matrix); %displays the map of Europe
    showmap.EdgeAlpha = 0; %removes the frames from each field in the csv
    load coast;
    hold on;
    plot(long,lat,'k'); %plots the data in color
    title("Hour: " + (k-1));
    showmap; % displays the map
    pause(0.3)
end
end


% --- changes map colour to redscale
function radiobutton1_Callback(hObject, eventdata, handles)

if get(hObject,'Value') == true
    colormap('gray');
else
    colormap default;
end
end

% --- changes map colour to bluescale
function radiobutton2_Callback(hObject, eventdata, handles)
map = [0 0 1
       0.1 0.1 1
       0.15 0.15 1
       0.2 0.2 1
       0.25 0.25 1
       0.3 0.3 1
       0.35 0.35 1
       0.4 0.4 1
       0.45 0.45 1
       0.5 0.5 1
       0.55 0.55 1
       0.6 0.6 1
       0.65 0.65 1
       0.7 0.7 1
       0.75 0.75 1
       0.8 0.8 1
       0.85 0.85 1
       0.9 0.9 1
       0.95 0.95 1
       1 1 1];
if get(hObject,'Value') == true
    colormap(map);
else
    colormap default;
end
end


% --- red
function radiobutton3_Callback(hObject, eventdata, handles)
map = [1 0 0 
       1 0.1 0.1 
       1 0.15 0.15 
       1 0.2 0.2 
       1 0.25 0.25 
       1 0.3 0.3 
       1 0.35 0.35 
       1 0.4 0.4 
       1 0.45 0.45 
       1 0.5 0.5 
       1 0.55 0.55 
       1 0.6 0.6 
       1 0.65 0.65 
       1 0.7 0.7 
       1 0.75 0.75 
       1 0.8 0.8 
       1 0.85 0.85 
       1 0.9 0.9 
       1 0.95 0.95 
       1 1 1];
if get(hObject,'Value') == true
    colormap(map);
else
    colormap default;
end
end


% --- green
function radiobutton4_Callback(hObject, eventdata, handles)
map = [0 0.4 0 
       0.1 0.45 0.1 
       0.15 0.455 0.15 
       0.2 0.5 0.2 
       0.25 0.55 0.25 
       0.3 0.555 0.3 
       0.35 0.6 0.35 
       0.4 0.65 0.4 
       0.45 0.655 0.45 
       0.5 0.7 0.5 
       0.55 0.75 0.55 
       0.6 0.8 0.6 
       0.65 0.85 0.65 
       0.7 0.9 0.7 
       0.75 0.95 0.75 
       0.8 1 0.8 
       0.85 1 0.85 
       0.9 1 0.9 
       0.95 1 0.95 
       1 1 1];
if get(hObject,'Value') == true
    colormap(map);
else
    colormap default;
end
end
